name: Mozaldol API CI

on:
  push:
    branches: ["master"]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonar:
    name: Sonar Analysis
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Install Dotnet Coverage
        run: |
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"LucasMSD_mozaodol-api" /o:"lucasmsd" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  Build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Instalar .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restaurar dependÃªncias
        run: dotnet restore

      - name: Buildar o projeto
        run: dotnet build --configuration Release --no-restore

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker for GCP
        run: |
          gcloud auth configure-docker southamerica-east1-docker.pkg.dev

      - name: Build Docker Image
        run: |
          docker build -t southamerica-east1-docker.pkg.dev/mozaodol/mozaodol-hub/mozaodol-api .

      - name: Push Docker Image to Artifact Registry
        run: |
          docker push southamerica-east1-docker.pkg.dev/mozaodol/mozaodol-hub/mozaodol-api


      - name: Deploy to Cloud Run
        run: |
          IMAGE="southamerica-east1-docker.pkg.dev/mozaodol/mozaodol-hub/mozaodol-api"
          gcloud run deploy mozaodol-api \
            --image $IMAGE \
            --region southamerica-east1 \
            --platform managed \
            --allow-unauthenticated